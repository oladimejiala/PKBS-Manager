{"ast":null,"code":"const API_BASE=process.env.REACT_APP_API_BASE_URL||'http://localhost:4000/api';export async function fetchUserTransactions(userId){const response=await fetch(`${API_BASE}/transactions/user/${userId}`);if(!response.ok){throw new Error('Failed to fetch transactions');}return response.json();}export const api={get:async endpoint=>{const response=await fetch(`${API_BASE}${endpoint}`);if(!response.ok){throw new Error(`GET ${endpoint} failed`);}return response.json();},post:async(endpoint,data)=>{const response=await fetch(`${API_BASE}${endpoint}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error(`POST ${endpoint} failed`);}return response.json();}};export async function fetchFactories(){const response=await fetch(`${API_BASE}/factories`);if(!response.ok){throw new Error('Failed to fetch factories');}return response.json();}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE_URL","fetchUserTransactions","userId","response","fetch","ok","Error","json","api","get","endpoint","post","data","method","headers","body","JSON","stringify","fetchFactories"],"sources":["/workspaces/PKBS-Manager/PKBS webapp version/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000/api';\n\nexport async function fetchUserTransactions(userId) {\n  const response = await fetch(`${API_BASE}/transactions/user/${userId}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch transactions');\n  }\n  return response.json();\n}\n\nexport const api = {\n  get: async (endpoint) => {\n    const response = await fetch(`${API_BASE}${endpoint}`);\n    if (!response.ok) {\n      throw new Error(`GET ${endpoint} failed`);\n    }\n    return response.json();\n  },\n\n  post: async (endpoint, data) => {\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    if (!response.ok) {\n      throw new Error(`POST ${endpoint} failed`);\n    }\n    return response.json();\n  },\n};\n\nexport async function fetchFactories() {\n  const response = await fetch(`${API_BASE}/factories`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch factories');\n  }\n  return response.json();\n}\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,2BAA2B,CAElF,MAAO,eAAe,CAAAC,qBAAqBA,CAACC,MAAM,CAAE,CAClD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,sBAAsBK,MAAM,EAAE,CAAC,CACvE,GAAI,CAACC,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACjD,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAEA,MAAO,MAAM,CAAAC,GAAG,CAAG,CACjBC,GAAG,CAAE,KAAO,CAAAC,QAAQ,EAAK,CACvB,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,GAAGa,QAAQ,EAAE,CAAC,CACtD,GAAI,CAACP,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,OAAOI,QAAQ,SAAS,CAAC,CAC3C,CACA,MAAO,CAAAP,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAAC,CAEDI,IAAI,CAAE,KAAAA,CAAOD,QAAQ,CAAEE,IAAI,GAAK,CAC9B,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,GAAGa,QAAQ,EAAE,CAAE,CACrDG,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAC3B,CAAC,CAAC,CACF,GAAI,CAACT,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,QAAQI,QAAQ,SAAS,CAAC,CAC5C,CACA,MAAO,CAAAP,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CACF,CAAC,CAED,MAAO,eAAe,CAAAW,cAAcA,CAAA,CAAG,CACrC,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,YAAY,CAAC,CACrD,GAAI,CAACM,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}