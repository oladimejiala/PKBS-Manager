{"ast":null,"code":"export async function verifyFingerprint(fingerprintData){// Example stub: replace with real API call or logic\ntry{const response=await fetch(`${API_BASE}/auth/verify-fingerprint`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fingerprint:fingerprintData})});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Fingerprint verification failed');}const data=await response.json();return data.verified;// boolean or relevant response\n}catch(error){console.error('Fingerprint verification error:',error.message);throw error;}}","map":{"version":3,"names":["verifyFingerprint","fingerprintData","response","fetch","API_BASE","method","headers","body","JSON","stringify","fingerprint","ok","errorData","json","catch","Error","message","data","verified","error","console"],"sources":["/workspaces/PKBS-Manager/PKBS webapp version/frontend/src/services/auth.js"],"sourcesContent":["export async function verifyFingerprint(fingerprintData) {\r\n  // Example stub: replace with real API call or logic\r\n  try {\r\n    const response = await fetch(`${API_BASE}/auth/verify-fingerprint`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ fingerprint: fingerprintData }),\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Fingerprint verification failed');\r\n    }\r\n    const data = await response.json();\r\n    return data.verified; // boolean or relevant response\r\n  } catch (error) {\r\n    console.error('Fingerprint verification error:', error.message);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAO,eAAe,CAAAA,iBAAiBA,CAACC,eAAe,CAAE,CACvD;AACA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGC,QAAQ,0BAA0B,CAAE,CAClEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,WAAW,CAAET,eAAgB,CAAC,CACvD,CAAC,CAAC,CACF,GAAI,CAACC,QAAQ,CAACS,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,IAAI,CAAAC,KAAK,CAACH,SAAS,CAACI,OAAO,EAAI,iCAAiC,CAAC,CACzE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAf,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAI,IAAI,CAACC,QAAQ,CAAE;AACxB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAACH,OAAO,CAAC,CAC/D,KAAM,CAAAG,KAAK,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}