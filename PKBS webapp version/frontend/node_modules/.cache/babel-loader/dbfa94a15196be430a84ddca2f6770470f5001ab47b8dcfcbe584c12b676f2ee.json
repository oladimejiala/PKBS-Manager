{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{verifyFingerprint}from'services/auth';import'../styles/FingerprintScanner.css';// FIXED path\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FingerprintScanner=_ref=>{let{title,onCapture,onBack,required=true}=_ref;const[scanning,setScanning]=useState(false);const[error,setError]=useState(null);const[retryCount,setRetryCount]=useState(0);const navigate=useNavigate();const handleScan=async()=>{setScanning(true);setError(null);try{const fingerprintData=await mockFingerprintScan();const isValid=await verifyFingerprint(fingerprintData);if(isValid){onCapture(fingerprintData);}else{throw new Error('Fingerprint verification failed. Please try again.');}}catch(err){setError(err.message);setRetryCount(prev=>prev+1);}finally{setScanning(false);}};const mockFingerprintScan=()=>{return new Promise(resolve=>{setTimeout(()=>{const randomFingerprint=Array(64).fill(0).map(()=>Math.floor(Math.random()*16).toString(16)).join('');resolve(randomFingerprint);},1500);});};useEffect(()=>{if(required)handleScan();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[required]);// ADDED dependency\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"fingerprint-scanner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-header\",children:[onBack&&/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:onBack,children:\"\\u2190 Back\"}),/*#__PURE__*/_jsx(\"h2\",{children:title||'Fingerprint Verification'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`scanner-body ${scanning?'scanning':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"fingerprint-icon\",children:scanning?/*#__PURE__*/_jsx(\"div\",{className:\"scan-animation\"}):/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 100 100\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M50,10A40,40 0 0,1 90,50A40,40 0 0,1 50,90A40,40 0 0,1 10,50A40,40 0 0,1 50,10Z\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M30,50Q50,30 70,50Q50,70 30,50Z\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"status-message\",children:scanning?/*#__PURE__*/_jsx(\"p\",{children:\"Scanning fingerprint...\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}):/*#__PURE__*/_jsx(\"p\",{children:\"Place your finger on the scanner\"})}),!scanning&&/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-actions\",children:[error&&retryCount<3&&/*#__PURE__*/_jsx(\"button\",{className:\"retry-button\",onClick:handleScan,children:\"Retry Scan\"}),!required&&/*#__PURE__*/_jsx(\"button\",{className:\"skip-button\",onClick:()=>navigate('/dashboard'),children:\"Skip Verification\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"scanner-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"PKBS uses biometric data for secure authentication\"})})]});};export default FingerprintScanner;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","verifyFingerprint","jsx","_jsx","jsxs","_jsxs","FingerprintScanner","_ref","title","onCapture","onBack","required","scanning","setScanning","error","setError","retryCount","setRetryCount","navigate","handleScan","fingerprintData","mockFingerprintScan","isValid","Error","err","message","prev","Promise","resolve","setTimeout","randomFingerprint","Array","fill","map","Math","floor","random","toString","join","className","children","onClick","viewBox","d"],"sources":["/workspaces/PKBS-Manager/PKBS webapp version/frontend/src/components/common/FingerprintScanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { verifyFingerprint } from 'services/auth';\r\nimport '../styles/FingerprintScanner.css'; // FIXED path\r\nconst FingerprintScanner = ({ title, onCapture, onBack, required = true }) => {\r\n  const [scanning, setScanning] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  const handleScan = async () => {\r\n    setScanning(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const fingerprintData = await mockFingerprintScan();\r\n      const isValid = await verifyFingerprint(fingerprintData);\r\n\r\n      if (isValid) {\r\n        onCapture(fingerprintData);\r\n      } else {\r\n        throw new Error('Fingerprint verification failed. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setRetryCount((prev) => prev + 1);\r\n    } finally {\r\n      setScanning(false);\r\n    }\r\n  };\r\n\r\n  const mockFingerprintScan = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const randomFingerprint = Array(64)\r\n          .fill(0)\r\n          .map(() => Math.floor(Math.random() * 16).toString(16))\r\n          .join('');\r\n        resolve(randomFingerprint);\r\n      }, 1500);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (required) handleScan();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [required]); // ADDED dependency\r\n\r\n  return (\r\n    <div className=\"fingerprint-scanner\">\r\n      <div className=\"scanner-header\">\r\n        {onBack && (\r\n          <button className=\"back-button\" onClick={onBack}>\r\n            &larr; Back\r\n          </button>\r\n        )}\r\n        <h2>{title || 'Fingerprint Verification'}</h2>\r\n      </div>\r\n\r\n      <div className={`scanner-body ${scanning ? 'scanning' : ''}`}>\r\n        <div className=\"fingerprint-icon\">\r\n          {scanning ? (\r\n            <div className=\"scan-animation\" />\r\n          ) : (\r\n            <svg viewBox=\"0 0 100 100\">\r\n              <path d=\"M50,10A40,40 0 0,1 90,50A40,40 0 0,1 50,90A40,40 0 0,1 10,50A40,40 0 0,1 50,10Z\" />\r\n              <path d=\"M30,50Q50,30 70,50Q50,70 30,50Z\" />\r\n            </svg>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"status-message\">\r\n          {scanning ? (\r\n            <p>Scanning fingerprint...</p>\r\n          ) : error ? (\r\n            <p className=\"error\">{error}</p>\r\n          ) : (\r\n            <p>Place your finger on the scanner</p>\r\n          )}\r\n        </div>\r\n\r\n        {!scanning && (\r\n          <div className=\"scanner-actions\">\r\n            {error && retryCount < 3 && (\r\n              <button className=\"retry-button\" onClick={handleScan}>\r\n                Retry Scan\r\n              </button>\r\n            )}\r\n            {!required && (\r\n              <button className=\"skip-button\" onClick={() => navigate('/dashboard')}>\r\n                Skip Verification\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"scanner-footer\">\r\n        <p>PKBS uses biometric data for secure authentication</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FingerprintScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}