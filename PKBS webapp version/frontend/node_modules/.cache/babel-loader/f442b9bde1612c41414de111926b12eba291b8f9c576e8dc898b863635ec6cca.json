{"ast":null,"code":"export async function loginUser(credentials){try{const response=await fetch(`${API_BASE}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Login failed');}const data=await response.json();localStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(data.user));return data.user;}catch(error){console.error('Login error:',error.message);throw error;}}export async function verifyFingerprint(fingerprintData){// Example stub: replace with real API call or logic\ntry{const response=await fetch(`${API_BASE}/auth/verify-fingerprint`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fingerprint:fingerprintData})});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Fingerprint verification failed');}const data=await response.json();return data.verified;// boolean or relevant response\n}catch(error){console.error('Fingerprint verification error:',error.message);throw error;}}","map":{"version":3,"names":["loginUser","credentials","response","fetch","API_BASE","method","headers","body","JSON","stringify","ok","errorData","json","catch","Error","message","data","localStorage","setItem","token","user","error","console","verifyFingerprint","fingerprintData","fingerprint","verified"],"sources":["/workspaces/PKBS-Manager/PKBS webapp version/frontend/src/services/auth.js"],"sourcesContent":["export async function loginUser(credentials) {\r\n  try {\r\n    const response = await fetch(`${API_BASE}/auth/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Login failed');\r\n    }\r\n\r\n    const data = await response.json();\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n    return data.user;\r\n  } catch (error) {\r\n    console.error('Login error:', error.message);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nexport async function verifyFingerprint(fingerprintData) {\r\n  // Example stub: replace with real API call or logic\r\n  try {\r\n    const response = await fetch(`${API_BASE}/auth/verify-fingerprint`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ fingerprint: fingerprintData }),\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Fingerprint verification failed');\r\n    }\r\n    const data = await response.json();\r\n    return data.verified; // boolean or relevant response\r\n  } catch (error) {\r\n    console.error('Fingerprint verification error:', error.message);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAO,eAAe,CAAAA,SAASA,CAACC,WAAW,CAAE,CAC3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGC,QAAQ,aAAa,CAAE,CACrDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,WAAW,CAClC,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,IAAI,CAAAC,KAAK,CAACH,SAAS,CAACI,OAAO,EAAI,cAAc,CAAC,CACtD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAd,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClCK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEF,IAAI,CAACG,KAAK,CAAC,CACzCF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEV,IAAI,CAACC,SAAS,CAACO,IAAI,CAACI,IAAI,CAAC,CAAC,CACvD,MAAO,CAAAJ,IAAI,CAACI,IAAI,CAClB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAACN,OAAO,CAAC,CAC5C,KAAM,CAAAM,KAAK,CACb,CACF,CAGA,MAAO,eAAe,CAAAE,iBAAiBA,CAACC,eAAe,CAAE,CACvD;AACA,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGC,QAAQ,0BAA0B,CAAE,CAClEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEgB,WAAW,CAAED,eAAgB,CAAC,CACvD,CAAC,CAAC,CACF,GAAI,CAACtB,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,IAAI,CAAAC,KAAK,CAACH,SAAS,CAACI,OAAO,EAAI,iCAAiC,CAAC,CACzE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAd,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAI,IAAI,CAACU,QAAQ,CAAE;AACxB,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAACN,OAAO,CAAC,CAC/D,KAAM,CAAAM,KAAK,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}